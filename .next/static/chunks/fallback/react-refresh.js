// runtime can't be in strict mode because a global variable is assign and maybe created.
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-refresh"],{

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/internal/helpers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/internal/helpers.js ***!
  \********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n/**\n * MIT License\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */ var __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n// This file is copied from the Metro JavaScript bundler, with minor tweaks for\n// webpack 4 compatibility.\n//\n// https://github.com/facebook/metro/blob/d6b9685c730d0d63577db40f41369157f28dfa3a/packages/metro/src/lib/polyfills/require.js\nconst runtime_1 = __importDefault(__webpack_require__(/*! next/dist/compiled/react-refresh/runtime */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/runtime.js\"));\nfunction isSafeExport(key) {\n    return key === '__esModule' || key === '__N_SSG' || key === '__N_SSP' || // TODO: remove this key from page config instead of allow listing it\n    key === 'config';\n}\nfunction registerExportsForReactRefresh(moduleExports, moduleID) {\n    runtime_1.default.register(moduleExports, moduleID + ' %exports%');\n    if (moduleExports == null || typeof moduleExports !== 'object') {\n        // Exit if we can't iterate over exports.\n        // (This is important for legacy environments.)\n        return;\n    }\n    for(var key in moduleExports){\n        if (isSafeExport(key)) {\n            continue;\n        }\n        try {\n            var exportValue = moduleExports[key];\n        } catch (_a) {\n            continue;\n        }\n        var typeID = moduleID + ' %exports% ' + key;\n        runtime_1.default.register(exportValue, typeID);\n    }\n}\nfunction getRefreshBoundarySignature(moduleExports) {\n    var signature = [];\n    signature.push(runtime_1.default.getFamilyByType(moduleExports));\n    if (moduleExports == null || typeof moduleExports !== 'object') {\n        // Exit if we can't iterate over exports.\n        // (This is important for legacy environments.)\n        return signature;\n    }\n    for(var key in moduleExports){\n        if (isSafeExport(key)) {\n            continue;\n        }\n        try {\n            var exportValue = moduleExports[key];\n        } catch (_a) {\n            continue;\n        }\n        signature.push(key);\n        signature.push(runtime_1.default.getFamilyByType(exportValue));\n    }\n    return signature;\n}\nfunction isReactRefreshBoundary(moduleExports) {\n    if (runtime_1.default.isLikelyComponentType(moduleExports)) {\n        return true;\n    }\n    if (moduleExports == null || typeof moduleExports !== 'object') {\n        // Exit if we can't iterate over exports.\n        return false;\n    }\n    var hasExports = false;\n    var areAllExportsComponents = true;\n    for(var key in moduleExports){\n        hasExports = true;\n        if (isSafeExport(key)) {\n            continue;\n        }\n        try {\n            var exportValue = moduleExports[key];\n        } catch (_a) {\n            // This might fail due to circular dependencies\n            return false;\n        }\n        if (!runtime_1.default.isLikelyComponentType(exportValue)) {\n            areAllExportsComponents = false;\n        }\n    }\n    return hasExports && areAllExportsComponents;\n}\nfunction shouldInvalidateReactRefreshBoundary(prevSignature, nextSignature) {\n    if (prevSignature.length !== nextSignature.length) {\n        return true;\n    }\n    for(var i = 0; i < nextSignature.length; i++){\n        if (prevSignature[i] !== nextSignature[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nvar isUpdateScheduled = false;\n// This function aggregates updates from multiple modules into a single React Refresh call.\nfunction scheduleUpdate() {\n    if (isUpdateScheduled) {\n        return;\n    }\n    isUpdateScheduled = true;\n    function canApplyUpdate(status) {\n        return status === 'idle';\n    }\n    function applyUpdate() {\n        isUpdateScheduled = false;\n        try {\n            runtime_1.default.performReactRefresh();\n        } catch (err) {\n            console.warn('Warning: Failed to re-render. We will retry on the next Fast Refresh event.\\n' + err);\n        }\n    }\n    if (canApplyUpdate(module.hot.status())) {\n        // Apply update on the next tick.\n        Promise.resolve().then(()=>{\n            applyUpdate();\n        });\n        return;\n    }\n    const statusHandler = (status)=>{\n        if (canApplyUpdate(status)) {\n            module.hot.removeStatusHandler(statusHandler);\n            applyUpdate();\n        }\n    };\n    // Apply update once the HMR runtime's status is idle.\n    module.hot.addStatusHandler(statusHandler);\n}\n// Needs to be compatible with IE11\nexports[\"default\"] = {\n    registerExportsForReactRefresh: registerExportsForReactRefresh,\n    isReactRefreshBoundary: isReactRefreshBoundary,\n    shouldInvalidateReactRefreshBoundary: shouldInvalidateReactRefreshBoundary,\n    getRefreshBoundarySignature: getRefreshBoundarySignature,\n    scheduleUpdate: scheduleUpdate\n}; //# sourceMappingURL=helpers.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvQG5leHQvcmVhY3QtcmVmcmVzaC11dGlscy9kaXN0L2ludGVybmFsL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBc0JHOzs7Ozs7OztBQUVILCtFQUErRTtBQUMvRSwyQkFBMkI7QUFDM0IsRUFBRTtBQUNGLDhIQUE4SDtBQUU5SCxzTEFBa0Q7QUFzQmxELFNBQVMsWUFBWSxDQUFDLEdBQVc7SUFDL0IsT0FBTyxHQUNGLEtBQUssWUFBWSxJQUNwQixHQUFHLEtBQUssU0FBUyxJQUNqQixHQUFHLEtBQUssU0FBUyxJQUNqQixxRUFBcUU7SUFDckUsR0FBRyxLQUFLLFFBQVEsQ0FDakI7QUFDSCxDQUFDO0FBRUQsU0FBUyw4QkFBOEIsQ0FDckMsYUFBc0IsRUFDdEIsUUFBZ0I7SUFFaEIsaUJBQWMsQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFLFFBQVEsR0FBRyxZQUFZLENBQUM7SUFDL0QsSUFBSSxhQUFhLElBQUksSUFBSSxJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsRUFBRSxDQUFDO1FBQy9ELHlDQUF5QztRQUN6QywrQ0FBK0M7UUFDL0MsT0FBTTtJQUNSLENBQUM7SUFDRCxJQUFLLElBQUksR0FBRyxJQUFJLGFBQWEsQ0FBRSxDQUFDO1FBQzlCLElBQUksWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdEIsU0FBUTtRQUNWLENBQUM7UUFDRCxJQUFJLENBQUM7WUFDSCxJQUFJLFdBQVcsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxXQUFNLENBQUM7WUFFUCxTQUFRO1FBQ1YsQ0FBQztRQUNELElBQUksTUFBTSxHQUFHLFFBQVEsR0FBRyxhQUFhLEdBQUcsR0FBRztRQUMzQyxpQkFBYyxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDO0lBQzlDLENBQUM7QUFDSCxDQUFDO0FBRUQsU0FBUywyQkFBMkIsQ0FBQyxhQUFzQjtJQUN6RCxJQUFJLFNBQVMsR0FBRyxFQUFFO0lBQ2xCLFNBQVMsQ0FBQyxJQUFJLENBQUMsaUJBQWMsQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDN0QsSUFBSSxhQUFhLElBQUksSUFBSSxJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsRUFBRSxDQUFDO1FBQy9ELHlDQUF5QztRQUN6QywrQ0FBK0M7UUFDL0MsT0FBTyxTQUFTO0lBQ2xCLENBQUM7SUFDRCxJQUFLLElBQUksR0FBRyxJQUFJLGFBQWEsQ0FBRSxDQUFDO1FBQzlCLElBQUksWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdEIsU0FBUTtRQUNWLENBQUM7UUFDRCxJQUFJLENBQUM7WUFDSCxJQUFJLFdBQVcsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDO1FBQ3RDLENBQUMsQ0FBQyxXQUFNLENBQUM7WUFFUCxTQUFRO1FBQ1YsQ0FBQztRQUNELFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQ25CLFNBQVMsQ0FBQyxJQUFJLENBQUMsaUJBQWMsQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUNELE9BQU8sU0FBUztBQUNsQixDQUFDO0FBRUQsU0FBUyxzQkFBc0IsQ0FBQyxhQUFzQjtJQUNwRCxJQUFJLGlCQUFjLENBQUMscUJBQXFCLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztRQUN4RCxPQUFPLElBQUk7SUFDYixDQUFDO0lBQ0QsSUFBSSxhQUFhLElBQUksSUFBSSxJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsRUFBRSxDQUFDO1FBQy9ELHlDQUF5QztRQUN6QyxPQUFPLEtBQUs7SUFDZCxDQUFDO0lBQ0QsSUFBSSxVQUFVLEdBQUcsS0FBSztJQUN0QixJQUFJLHVCQUF1QixHQUFHLElBQUk7SUFDbEMsSUFBSyxJQUFJLEdBQUcsSUFBSSxhQUFhLENBQUUsQ0FBQztRQUM5QixVQUFVLEdBQUcsSUFBSTtRQUNqQixJQUFJLFlBQVksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3RCLFNBQVE7UUFDVixDQUFDO1FBQ0QsSUFBSSxDQUFDO1lBQ0gsSUFBSSxXQUFXLEdBQUcsYUFBYSxDQUFDLEdBQUcsQ0FBQztRQUN0QyxDQUFDLENBQUMsV0FBTSxDQUFDO1lBQ1AsK0NBQStDO1lBQy9DLE9BQU8sS0FBSztRQUNkLENBQUM7UUFDRCxJQUFJLENBQUMsaUJBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDO1lBQ3ZELHVCQUF1QixHQUFHLEtBQUs7UUFDakMsQ0FBQztJQUNILENBQUM7SUFDRCxPQUFPLFVBQVUsSUFBSSx1QkFBdUI7QUFDOUMsQ0FBQztBQUVELFNBQVMsb0NBQW9DLENBQzNDLGFBQXdCLEVBQ3hCLGFBQXdCO0lBRXhCLElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDbEQsT0FBTyxJQUFJO0lBQ2IsQ0FBQztJQUNELElBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7UUFDOUMsSUFBSSxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDMUMsT0FBTyxJQUFJO1FBQ2IsQ0FBQztJQUNILENBQUM7SUFDRCxPQUFPLEtBQUs7QUFDZCxDQUFDO0FBRUQsSUFBSSxpQkFBaUIsR0FBWSxLQUFLO0FBQ3RDLDJGQUEyRjtBQUMzRixTQUFTLGNBQWM7SUFDckIsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1FBQ3RCLE9BQU07SUFDUixDQUFDO0lBQ0QsaUJBQWlCLEdBQUcsSUFBSTtJQUV4QixTQUFTLGNBQWMsQ0FBQyxNQUF1QjtRQUM3QyxPQUFPLE1BQU0sS0FBSyxNQUFNO0lBQzFCLENBQUM7SUFFRCxTQUFTLFdBQVc7UUFDbEIsaUJBQWlCLEdBQUcsS0FBSztRQUN6QixJQUFJLENBQUM7WUFDSCxpQkFBYyxDQUFDLG1CQUFtQixFQUFFO1FBQ3RDLENBQUMsQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1lBQ2IsT0FBTyxDQUFDLElBQUksQ0FDViwrRUFBK0UsR0FDN0UsR0FBRyxDQUNOO1FBQ0gsQ0FBQztJQUNILENBQUM7SUFFRCxJQUFJLGNBQWMsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO1FBQ3hDLGlDQUFpQztRQUNqQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUMxQixXQUFXLEVBQUU7UUFDZixDQUFDLENBQUM7UUFDRixPQUFNO0lBQ1IsQ0FBQztJQUVELE1BQU0sYUFBYSxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDL0IsSUFBSSxjQUFjLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztZQUMzQixVQUFVLENBQUMsbUJBQW1CLENBQUMsYUFBYSxDQUFDO1lBQzdDLFdBQVcsRUFBRTtRQUNmLENBQUM7SUFDSCxDQUFDO0lBRUQsc0RBQXNEO0lBQ3RELFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUM7QUFDNUMsQ0FBQztBQUVELG1DQUFtQztBQUNuQyxxQkFBZTtJQUNiLDhCQUE4QixFQUFFLDhCQUE4QjtJQUM5RCxzQkFBc0IsRUFBRSxzQkFBc0I7SUFDOUMsb0NBQW9DLEVBQUUsb0NBQW9DO0lBQzFFLDJCQUEyQixFQUFFLDJCQUEyQjtJQUN4RCxjQUFjLEVBQUUsY0FBYztDQUMvQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pbmlzdHJhdG9yXFxpbnRlcm5hbFxcaGVscGVycy50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/internal/helpers.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/runtime.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/runtime.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst runtime_1 = __importDefault(__webpack_require__(/*! next/dist/compiled/react-refresh/runtime */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/runtime.js\"));\nconst helpers_1 = __importDefault(__webpack_require__(/*! ./internal/helpers */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/internal/helpers.js\"));\n// Hook into ReactDOM initialization\nruntime_1.default.injectIntoGlobalHook(self);\n// Register global helpers\nself.$RefreshHelpers$ = helpers_1.default;\n// Register a helper for module execution interception\nself.$RefreshInterceptModuleExecution$ = function(webpackModuleId) {\n    var prevRefreshReg = self.$RefreshReg$;\n    var prevRefreshSig = self.$RefreshSig$;\n    self.$RefreshReg$ = function(type, id) {\n        runtime_1.default.register(type, webpackModuleId + ' ' + id);\n    };\n    self.$RefreshSig$ = runtime_1.default.createSignatureFunctionForTransform;\n    // Modeled after `useEffect` cleanup pattern:\n    // https://react.dev/learn/synchronizing-with-effects#step-3-add-cleanup-if-needed\n    return function() {\n        self.$RefreshReg$ = prevRefreshReg;\n        self.$RefreshSig$ = prevRefreshSig;\n    };\n}; //# sourceMappingURL=runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvQG5leHQvcmVhY3QtcmVmcmVzaC11dGlscy9kaXN0L3J1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0xBQWtEO0FBQ2xELDZMQUErQztBQVcvQyxvQ0FBb0M7QUFDcEMsaUJBQWMsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUM7QUFFekMsMEJBQTBCO0FBQzFCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxpQkFBYztBQUV0QyxzREFBc0Q7QUFDdEQsSUFBSSxDQUFDLGlDQUFpQyxHQUFHLFNBQVUsZUFBZTtJQUNoRSxJQUFJLGNBQWMsR0FBRyxJQUFJLENBQUMsWUFBWTtJQUN0QyxJQUFJLGNBQWMsR0FBRyxJQUFJLENBQUMsWUFBWTtJQUV0QyxJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVUsSUFBSSxFQUFFLEVBQUU7UUFDcEMsaUJBQWMsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLGVBQWUsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQzNELENBQUM7SUFDRCxJQUFJLENBQUMsWUFBWSxHQUFHLGlCQUFjLENBQUMsbUNBQW1DO0lBRXRFLDZDQUE2QztJQUM3QyxrRkFBa0Y7SUFDbEYsT0FBTztRQUNMLElBQUksQ0FBQyxZQUFZLEdBQUcsY0FBYztRQUNsQyxJQUFJLENBQUMsWUFBWSxHQUFHLGNBQWM7SUFDcEMsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5pc3RyYXRvclxcRGVza3RvcFxccnVudGltZS50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/runtime.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/cjs/react-refresh-runtime.development.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react-refresh/cjs/react-refresh-runtime.development.js ***!
  \************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-refresh-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        'use strict';\n        // ATTENTION\n        var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n        var REACT_MEMO_TYPE = Symbol.for('react.memo');\n        var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.\n        // It's OK to reference families, but use WeakMap/Set for types.\n        var allFamiliesByID = new Map();\n        var allFamiliesByType = new PossiblyWeakMap();\n        var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families\n        // that have actually been edited here. This keeps checks fast.\n        // $FlowIssue\n        var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.\n        // It is an array of [Family, NextType] tuples.\n        var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.\n        var helpersByRendererID = new Map();\n        var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.\n        var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.\n        var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.\n        // It needs to be weak because we do this even for roots that failed to mount.\n        // If there is no WeakMap, we won't attempt to do retrying.\n        // $FlowIssue\n        var rootElements = typeof WeakMap === 'function' ? new WeakMap() : null;\n        var isPerformingRefresh = false;\n        function computeFullKey(signature) {\n            if (signature.fullKey !== null) {\n                return signature.fullKey;\n            }\n            var fullKey = signature.ownKey;\n            var hooks;\n            try {\n                hooks = signature.getCustomHooks();\n            } catch (err) {\n                // This can happen in an edge case, e.g. if expression like Foo.useSomething\n                // depends on Foo which is lazily initialized during rendering.\n                // In that case just assume we'll have to remount.\n                signature.forceReset = true;\n                signature.fullKey = fullKey;\n                return fullKey;\n            }\n            for(var i = 0; i < hooks.length; i++){\n                var hook = hooks[i];\n                if (typeof hook !== 'function') {\n                    // Something's wrong. Assume we need to remount.\n                    signature.forceReset = true;\n                    signature.fullKey = fullKey;\n                    return fullKey;\n                }\n                var nestedHookSignature = allSignaturesByType.get(hook);\n                if (nestedHookSignature === undefined) {\n                    continue;\n                }\n                var nestedHookKey = computeFullKey(nestedHookSignature);\n                if (nestedHookSignature.forceReset) {\n                    signature.forceReset = true;\n                }\n                fullKey += '\\n---\\n' + nestedHookKey;\n            }\n            signature.fullKey = fullKey;\n            return fullKey;\n        }\n        function haveEqualSignatures(prevType, nextType) {\n            var prevSignature = allSignaturesByType.get(prevType);\n            var nextSignature = allSignaturesByType.get(nextType);\n            if (prevSignature === undefined && nextSignature === undefined) {\n                return true;\n            }\n            if (prevSignature === undefined || nextSignature === undefined) {\n                return false;\n            }\n            if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {\n                return false;\n            }\n            if (nextSignature.forceReset) {\n                return false;\n            }\n            return true;\n        }\n        function isReactClass(type) {\n            return type.prototype && type.prototype.isReactComponent;\n        }\n        function canPreserveStateBetween(prevType, nextType) {\n            if (isReactClass(prevType) || isReactClass(nextType)) {\n                return false;\n            }\n            if (haveEqualSignatures(prevType, nextType)) {\n                return true;\n            }\n            return false;\n        }\n        function resolveFamily(type) {\n            // Only check updated types to keep lookups fast.\n            return updatedFamiliesByType.get(type);\n        } // If we didn't care about IE11, we could use new Map/Set(iterable).\n        function cloneMap(map) {\n            var clone = new Map();\n            map.forEach(function(value, key) {\n                clone.set(key, value);\n            });\n            return clone;\n        }\n        function cloneSet(set) {\n            var clone = new Set();\n            set.forEach(function(value) {\n                clone.add(value);\n            });\n            return clone;\n        } // This is a safety mechanism to protect against rogue getters and Proxies.\n        function getProperty(object, property) {\n            try {\n                return object[property];\n            } catch (err) {\n                // Intentionally ignore.\n                return undefined;\n            }\n        }\n        function performReactRefresh() {\n            if (pendingUpdates.length === 0) {\n                return null;\n            }\n            if (isPerformingRefresh) {\n                return null;\n            }\n            isPerformingRefresh = true;\n            try {\n                var staleFamilies = new Set();\n                var updatedFamilies = new Set();\n                var updates = pendingUpdates;\n                pendingUpdates = [];\n                updates.forEach(function(_ref) {\n                    var family = _ref[0], nextType = _ref[1];\n                    // Now that we got a real edit, we can create associations\n                    // that will be read by the React reconciler.\n                    var prevType = family.current;\n                    updatedFamiliesByType.set(prevType, family);\n                    updatedFamiliesByType.set(nextType, family);\n                    family.current = nextType; // Determine whether this should be a re-render or a re-mount.\n                    if (canPreserveStateBetween(prevType, nextType)) {\n                        updatedFamilies.add(family);\n                    } else {\n                        staleFamilies.add(family);\n                    }\n                }); // TODO: rename these fields to something more meaningful.\n                var update = {\n                    updatedFamilies: updatedFamilies,\n                    // Families that will re-render preserving state\n                    staleFamilies: staleFamilies // Families that will be remounted\n                };\n                helpersByRendererID.forEach(function(helpers) {\n                    // Even if there are no roots, set the handler on first update.\n                    // This ensures that if *new* roots are mounted, they'll use the resolve handler.\n                    helpers.setRefreshHandler(resolveFamily);\n                });\n                var didError = false;\n                var firstError = null; // We snapshot maps and sets that are mutated during commits.\n                // If we don't do this, there is a risk they will be mutated while\n                // we iterate over them. For example, trying to recover a failed root\n                // may cause another root to be added to the failed list -- an infinite loop.\n                var failedRootsSnapshot = cloneSet(failedRoots);\n                var mountedRootsSnapshot = cloneSet(mountedRoots);\n                var helpersByRootSnapshot = cloneMap(helpersByRoot);\n                failedRootsSnapshot.forEach(function(root) {\n                    var helpers = helpersByRootSnapshot.get(root);\n                    if (helpers === undefined) {\n                        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n                    }\n                    if (!failedRoots.has(root)) {}\n                    if (rootElements === null) {\n                        return;\n                    }\n                    if (!rootElements.has(root)) {\n                        return;\n                    }\n                    var element = rootElements.get(root);\n                    try {\n                        helpers.scheduleRoot(root, element);\n                    } catch (err) {\n                        if (!didError) {\n                            didError = true;\n                            firstError = err;\n                        } // Keep trying other roots.\n                    }\n                });\n                mountedRootsSnapshot.forEach(function(root) {\n                    var helpers = helpersByRootSnapshot.get(root);\n                    if (helpers === undefined) {\n                        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n                    }\n                    if (!mountedRoots.has(root)) {}\n                    try {\n                        helpers.scheduleRefresh(root, update);\n                    } catch (err) {\n                        if (!didError) {\n                            didError = true;\n                            firstError = err;\n                        } // Keep trying other roots.\n                    }\n                });\n                if (didError) {\n                    throw firstError;\n                }\n                return update;\n            } finally{\n                isPerformingRefresh = false;\n            }\n        }\n        function register(type, id) {\n            {\n                if (type === null) {\n                    return;\n                }\n                if (typeof type !== 'function' && typeof type !== 'object') {\n                    return;\n                } // This can happen in an edge case, e.g. if we register\n                // return value of a HOC but it returns a cached component.\n                // Ignore anything but the first registration for each type.\n                if (allFamiliesByType.has(type)) {\n                    return;\n                } // Create family or remember to update it.\n                // None of this bookkeeping affects reconciliation\n                // until the first performReactRefresh() call above.\n                var family = allFamiliesByID.get(id);\n                if (family === undefined) {\n                    family = {\n                        current: type\n                    };\n                    allFamiliesByID.set(id, family);\n                } else {\n                    pendingUpdates.push([\n                        family,\n                        type\n                    ]);\n                }\n                allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.\n                if (typeof type === 'object' && type !== null) {\n                    switch(getProperty(type, '$$typeof')){\n                        case REACT_FORWARD_REF_TYPE:\n                            register(type.render, id + '$render');\n                            break;\n                        case REACT_MEMO_TYPE:\n                            register(type.type, id + '$type');\n                            break;\n                    }\n                }\n            }\n        }\n        function setSignature(type, key) {\n            var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;\n            {\n                if (!allSignaturesByType.has(type)) {\n                    allSignaturesByType.set(type, {\n                        forceReset: forceReset,\n                        ownKey: key,\n                        fullKey: null,\n                        getCustomHooks: getCustomHooks || function() {\n                            return [];\n                        }\n                    });\n                } // Visit inner types because we might not have signed them.\n                if (typeof type === 'object' && type !== null) {\n                    switch(getProperty(type, '$$typeof')){\n                        case REACT_FORWARD_REF_TYPE:\n                            setSignature(type.render, key, forceReset, getCustomHooks);\n                            break;\n                        case REACT_MEMO_TYPE:\n                            setSignature(type.type, key, forceReset, getCustomHooks);\n                            break;\n                    }\n                }\n            }\n        } // This is lazily called during first render for a type.\n        // It captures Hook list at that time so inline requires don't break comparisons.\n        function collectCustomHooksForSignature(type) {\n            {\n                var signature = allSignaturesByType.get(type);\n                if (signature !== undefined) {\n                    computeFullKey(signature);\n                }\n            }\n        }\n        function getFamilyByID(id) {\n            {\n                return allFamiliesByID.get(id);\n            }\n        }\n        function getFamilyByType(type) {\n            {\n                return allFamiliesByType.get(type);\n            }\n        }\n        function findAffectedHostInstances(families) {\n            {\n                var affectedInstances = new Set();\n                mountedRoots.forEach(function(root) {\n                    var helpers = helpersByRoot.get(root);\n                    if (helpers === undefined) {\n                        throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');\n                    }\n                    var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);\n                    instancesForRoot.forEach(function(inst) {\n                        affectedInstances.add(inst);\n                    });\n                });\n                return affectedInstances;\n            }\n        }\n        function injectIntoGlobalHook(globalObject) {\n            {\n                // For React Native, the global hook will be set up by require('react-devtools-core').\n                // That code will run before us. So we need to monkeypatch functions on existing hook.\n                // For React Web, the global hook will be set up by the extension.\n                // This will also run before us.\n                var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n                if (hook === undefined) {\n                    // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.\n                    // Note that in this case it's important that renderer code runs *after* this method call.\n                    // Otherwise, the renderer will think that there is no global hook, and won't do the injection.\n                    var nextID = 0;\n                    globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {\n                        renderers: new Map(),\n                        supportsFiber: true,\n                        inject: function(injected) {\n                            return nextID++;\n                        },\n                        onScheduleFiberRoot: function(id, root, children) {},\n                        onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {},\n                        onCommitFiberUnmount: function() {}\n                    };\n                }\n                if (hook.isDisabled) {\n                    // This isn't a real property on the hook, but it can be set to opt out\n                    // of DevTools integration and associated warnings and logs.\n                    // Using console['warn'] to evade Babel and ESLint\n                    console['warn']('Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). ' + 'Fast Refresh is not compatible with this shim and will be disabled.');\n                    return;\n                } // Here, we just want to get a reference to scheduleRefresh.\n                var oldInject = hook.inject;\n                hook.inject = function(injected) {\n                    var id = oldInject.apply(this, arguments);\n                    if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n                        // This version supports React Refresh.\n                        helpersByRendererID.set(id, injected);\n                    }\n                    return id;\n                }; // Do the same for any already injected roots.\n                // This is useful if ReactDOM has already been initialized.\n                // https://github.com/facebook/react/issues/17626\n                hook.renderers.forEach(function(injected, id) {\n                    if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {\n                        // This version supports React Refresh.\n                        helpersByRendererID.set(id, injected);\n                    }\n                }); // We also want to track currently mounted roots.\n                var oldOnCommitFiberRoot = hook.onCommitFiberRoot;\n                var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};\n                hook.onScheduleFiberRoot = function(id, root, children) {\n                    if (!isPerformingRefresh) {\n                        // If it was intentionally scheduled, don't attempt to restore.\n                        // This includes intentionally scheduled unmounts.\n                        failedRoots.delete(root);\n                        if (rootElements !== null) {\n                            rootElements.set(root, children);\n                        }\n                    }\n                    return oldOnScheduleFiberRoot.apply(this, arguments);\n                };\n                hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {\n                    var helpers = helpersByRendererID.get(id);\n                    if (helpers !== undefined) {\n                        helpersByRoot.set(root, helpers);\n                        var current = root.current;\n                        var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.\n                        // This logic is copy-pasted from similar logic in the DevTools backend.\n                        // If this breaks with some refactoring, you'll want to update DevTools too.\n                        if (alternate !== null) {\n                            var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null && mountedRoots.has(root);\n                            var isMounted = current.memoizedState != null && current.memoizedState.element != null;\n                            if (!wasMounted && isMounted) {\n                                // Mount a new root.\n                                mountedRoots.add(root);\n                                failedRoots.delete(root);\n                            } else if (wasMounted && isMounted) ;\n                            else if (wasMounted && !isMounted) {\n                                // Unmount an existing root.\n                                mountedRoots.delete(root);\n                                if (didError) {\n                                    // We'll remount it on future edits.\n                                    failedRoots.add(root);\n                                } else {\n                                    helpersByRoot.delete(root);\n                                }\n                            } else if (!wasMounted && !isMounted) {\n                                if (didError) {\n                                    // We'll remount it on future edits.\n                                    failedRoots.add(root);\n                                }\n                            }\n                        } else {\n                            // Mount a new root.\n                            mountedRoots.add(root);\n                        }\n                    } // Always call the decorated DevTools hook.\n                    return oldOnCommitFiberRoot.apply(this, arguments);\n                };\n            }\n        }\n        function hasUnrecoverableErrors() {\n            // TODO: delete this after removing dependency in RN.\n            return false;\n        } // Exposed for testing.\n        function _getMountedRootCount() {\n            {\n                return mountedRoots.size;\n            }\n        } // This is a wrapper over more primitive functions for setting signature.\n        // Signatures let us decide whether the Hook order has changed on refresh.\n        //\n        // This function is intended to be used as a transform target, e.g.:\n        // var _s = createSignatureFunctionForTransform()\n        //\n        // function Hello() {\n        //   const [foo, setFoo] = useState(0);\n        //   const value = useCustomHook();\n        //   _s(); /* Call without arguments triggers collecting the custom Hook list.\n        //          * This doesn't happen during the module evaluation because we\n        //          * don't want to change the module order with inline requires.\n        //          * Next calls are noops. */\n        //   return <h1>Hi</h1>;\n        // }\n        //\n        // /* Call with arguments attaches the signature to the type: */\n        // _s(\n        //   Hello,\n        //   'useState{[foo, setFoo]}(0)',\n        //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */\n        // );\n        function createSignatureFunctionForTransform() {\n            {\n                var savedType;\n                var hasCustomHooks;\n                var didCollectHooks = false;\n                return function(type, key, forceReset, getCustomHooks) {\n                    if (typeof key === 'string') {\n                        // We're in the initial phase that associates signatures\n                        // with the functions. Note this may be called multiple times\n                        // in HOC chains like _s(hoc1(_s(hoc2(_s(actualFunction))))).\n                        if (!savedType) {\n                            // We're in the innermost call, so this is the actual type.\n                            savedType = type;\n                            hasCustomHooks = typeof getCustomHooks === 'function';\n                        } // Set the signature for all types (even wrappers!) in case\n                        // they have no signatures of their own. This is to prevent\n                        // problems like https://github.com/facebook/react/issues/20417.\n                        if (type != null && (typeof type === 'function' || typeof type === 'object')) {\n                            setSignature(type, key, forceReset, getCustomHooks);\n                        }\n                        return type;\n                    } else {\n                        // We're in the _s() call without arguments, which means\n                        // this is the time to collect custom Hook signatures.\n                        // Only do this once. This path is hot and runs *inside* every render!\n                        if (!didCollectHooks && hasCustomHooks) {\n                            didCollectHooks = true;\n                            collectCustomHooksForSignature(savedType);\n                        }\n                    }\n                };\n            }\n        }\n        function isLikelyComponentType(type) {\n            {\n                switch(typeof type){\n                    case 'function':\n                        {\n                            // First, deal with classes.\n                            if (type.prototype != null) {\n                                if (type.prototype.isReactComponent) {\n                                    // React class.\n                                    return true;\n                                }\n                                var ownNames = Object.getOwnPropertyNames(type.prototype);\n                                if (ownNames.length > 1 || ownNames[0] !== 'constructor') {\n                                    // This looks like a class.\n                                    return false;\n                                } // eslint-disable-next-line no-proto\n                                if (type.prototype.__proto__ !== Object.prototype) {\n                                    // It has a superclass.\n                                    return false;\n                                } // Pass through.\n                            // This looks like a regular function with empty prototype.\n                            } // For plain functions and arrows, use name as a heuristic.\n                            var name = type.name || type.displayName;\n                            return typeof name === 'string' && /^[A-Z]/.test(name);\n                        }\n                    case 'object':\n                        {\n                            if (type != null) {\n                                switch(getProperty(type, '$$typeof')){\n                                    case REACT_FORWARD_REF_TYPE:\n                                    case REACT_MEMO_TYPE:\n                                        // Definitely React components.\n                                        return true;\n                                    default:\n                                        return false;\n                                }\n                            }\n                            return false;\n                        }\n                    default:\n                        {\n                            return false;\n                        }\n                }\n            }\n        }\n        exports._getMountedRootCount = _getMountedRootCount;\n        exports.collectCustomHooksForSignature = collectCustomHooksForSignature;\n        exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;\n        exports.findAffectedHostInstances = findAffectedHostInstances;\n        exports.getFamilyByID = getFamilyByID;\n        exports.getFamilyByType = getFamilyByType;\n        exports.hasUnrecoverableErrors = hasUnrecoverableErrors;\n        exports.injectIntoGlobalHook = injectIntoGlobalHook;\n        exports.isLikelyComponentType = isLikelyComponentType;\n        exports.performReactRefresh = performReactRefresh;\n        exports.register = register;\n        exports.setSignature = setSignature;\n    })();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/cjs/react-refresh-runtime.development.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react-refresh/runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-refresh-runtime.development.js */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/cjs/react-refresh-runtime.development.js\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QtcmVmcmVzaC9ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWIsSUFBSUEsS0FBcUMsRUFBRSxFQUUxQyxNQUFNO0lBQ0xDLHNNQUFzRTtBQUN4RSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pbmlzdHJhdG9yXFxEZXNrdG9wXFxTZXJhcGhpbmVfSHlicmlkX1YxX0FwcFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxccmVhY3QtcmVmcmVzaFxccnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtcmVmcmVzaC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LXJlZnJlc2gtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/react-refresh/runtime.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(pages-dir-browser)/./node_modules/next/dist/compiled/@next/react-refresh-utils/dist/runtime.js"));
/******/ _N_E = __webpack_exports__;
/******/ }
]);